

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Wed Aug 21 09:50:18 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	18F4580
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=2
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=2
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1
    17                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    18                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    19                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    20   000000                     
    21                           ; Generated 17/10/2023 GMT
    22                           ; 
    23                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    24                           ; All rights reserved.
    25                           ; 
    26                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    27                           ; 
    28                           ; Redistribution and use in source and binary forms, with or without modification, are
    29                           ; permitted provided that the following conditions are met:
    30                           ; 
    31                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    32                           ;        conditions and the following disclaimer.
    33                           ; 
    34                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    35                           ;        of conditions and the following disclaimer in the documentation and/or other
    36                           ;        materials provided with the distribution. Publication is not required when
    37                           ;        this file is used in an embedded application.
    38                           ; 
    39                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    40                           ;        software without specific prior written permission.
    41                           ; 
    42                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    43                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    44                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    45                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    46                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    47                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    48                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    49                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    50                           ; 
    51                           ; 
    52                           ; Code-generator required, PIC18F4580 Definitions
    53                           ; 
    54                           ; SFR Addresses
    55   000000                     
    56                           	psect	idataCOMRAM
    57   000DA0                     __pidataCOMRAM:
    58                           	callstack 0
    59                           
    60                           ;initializer for main@F10669
    61   000DA0  30                 	db	48
    62   000DA1  30                 	db	48
    63   000DA2  30                 	db	48
    64   000DA3  30                 	db	48
    65   000DA4  00                 	db	0
    66                           
    67                           ;initializer for main@F10667
    68   000DA5  30                 	db	48
    69   000DA6  30                 	db	48
    70   000DA7  30                 	db	48
    71   000DA8  30                 	db	48
    72   000DA9  00                 	db	0
    73                           
    74                           ;initializer for main@F10665
    75   000DAA  31                 	db	49
    76   000DAB  32                 	db	50
    77   000DAC  33                 	db	51
    78   000DAD  34                 	db	52
    79   000DAE  00                 	db	0
    80                           
    81                           ;initializer for main@F10663
    82   000DAF  30                 	db	48
    83   000DB0  30                 	db	48
    84   000DB1  30                 	db	48
    85   000DB2  30                 	db	48
    86   000DB3  00                 	db	0
    87   000000                     _RB7	set	31759
    88   000000                     _RB6	set	31758
    89   000000                     _RB5	set	31757
    90   000000                     _RB4	set	31756
    91   000000                     _RC2	set	31762
    92   000000                     _RC1	set	31761
    93   000000                     _PORTB	set	3969
    94   000000                     _RC0	set	31760
    95   000000                     _TRISA	set	3986
    96   000000                     _TRISB	set	3987
    97   000000                     _ADCON1	set	4033
    98   000000                     _PORTD	set	3971
    99   000000                     _TRISD	set	3989
   100   000000                     _TRISC	set	3988
   101                           
   102                           	psect	smallconst
   103   000600                     __psmallconst:
   104                           	callstack 0
   105   000600  00                 	db	0
   106   000601                     STR_7:
   107   000601  65                 	db	101	;'e'
   108   000602  6E                 	db	110	;'n'
   109   000603  74                 	db	116	;'t'
   110   000604  72                 	db	114	;'r'
   111   000605  79                 	db	121	;'y'
   112   000606  20                 	db	32
   113   000607  6D                 	db	109	;'m'
   114   000608  69                 	db	105	;'i'
   115   000609  73                 	db	115	;'s'
   116   00060A  6D                 	db	109	;'m'
   117   00060B  61                 	db	97	;'a'
   118   00060C  74                 	db	116	;'t'
   119   00060D  63                 	db	99	;'c'
   120   00060E  68                 	db	104	;'h'
   121   00060F  00                 	db	0
   122   000610                     STR_2:
   123   000610  65                 	db	101	;'e'
   124   000611  6E                 	db	110	;'n'
   125   000612  74                 	db	116	;'t'
   126   000613  65                 	db	101	;'e'
   127   000614  72                 	db	114	;'r'
   128   000615  20                 	db	32
   129   000616  6F                 	db	111	;'o'
   130   000617  6C                 	db	108	;'l'
   131   000618  64                 	db	100	;'d'
   132   000619  20                 	db	32
   133   00061A  70                 	db	112	;'p'
   134   00061B  61                 	db	97	;'a'
   135   00061C  73                 	db	115	;'s'
   136   00061D  73                 	db	115	;'s'
   137   00061E  00                 	db	0
   138   00061F                     STR_4:
   139   00061F  65                 	db	101	;'e'
   140   000620  6E                 	db	110	;'n'
   141   000621  74                 	db	116	;'t'
   142   000622  65                 	db	101	;'e'
   143   000623  72                 	db	114	;'r'
   144   000624  20                 	db	32
   145   000625  6E                 	db	110	;'n'
   146   000626  65                 	db	101	;'e'
   147   000627  77                 	db	119	;'w'
   148   000628  20                 	db	32
   149   000629  70                 	db	112	;'p'
   150   00062A  61                 	db	97	;'a'
   151   00062B  73                 	db	115	;'s'
   152   00062C  73                 	db	115	;'s'
   153   00062D  00                 	db	0
   154   00062E                     STR_8:
   155   00062E  63                 	db	99	;'c'
   156   00062F  6F                 	db	111	;'o'
   157   000630  72                 	db	114	;'r'
   158   000631  72                 	db	114	;'r'
   159   000632  65                 	db	101	;'e'
   160   000633  63                 	db	99	;'c'
   161   000634  74                 	db	116	;'t'
   162   000635  20                 	db	32
   163   000636  70                 	db	112	;'p'
   164   000637  61                 	db	97	;'a'
   165   000638  73                 	db	115	;'s'
   166   000639  73                 	db	115	;'s'
   167   00063A  00                 	db	0
   168   00063B                     STR_5:
   169   00063B  65                 	db	101	;'e'
   170   00063C  6E                 	db	110	;'n'
   171   00063D  74                 	db	116	;'t'
   172   00063E  65                 	db	101	;'e'
   173   00063F  72                 	db	114	;'r'
   174   000640  20                 	db	32
   175   000641  61                 	db	97	;'a'
   176   000642  67                 	db	103	;'g'
   177   000643  61                 	db	97	;'a'
   178   000644  69                 	db	105	;'i'
   179   000645  6E                 	db	110	;'n'
   180   000646  00                 	db	0
   181   000647                     STR_3:
   182   000647  77                 	db	119	;'w'
   183   000648  72                 	db	114	;'r'
   184   000649  6F                 	db	111	;'o'
   185   00064A  6E                 	db	110	;'n'
   186   00064B  67                 	db	103	;'g'
   187   00064C  20                 	db	32
   188   00064D  70                 	db	112	;'p'
   189   00064E  61                 	db	97	;'a'
   190   00064F  73                 	db	115	;'s'
   191   000650  73                 	db	115	;'s'
   192   000651  00                 	db	0
   193   000652                     STR_1:
   194   000652  65                 	db	101	;'e'
   195   000653  6E                 	db	110	;'n'
   196   000654  74                 	db	116	;'t'
   197   000655  65                 	db	101	;'e'
   198   000656  72                 	db	114	;'r'
   199   000657  20                 	db	32
   200   000658  70                 	db	112	;'p'
   201   000659  61                 	db	97	;'a'
   202   00065A  73                 	db	115	;'s'
   203   00065B  73                 	db	115	;'s'
   204   00065C  00                 	db	0
   205   00065D                     STR_6:
   206   00065D  70                 	db	112	;'p'
   207   00065E  61                 	db	97	;'a'
   208   00065F  73                 	db	115	;'s'
   209   000660  73                 	db	115	;'s'
   210   000661  20                 	db	32
   211   000662  73                 	db	115	;'s'
   212   000663  65                 	db	101	;'e'
   213   000664  74                 	db	116	;'t'
   214   000665  00                 	db	0
   215   000666  00                 	db	0	; dummy byte at the end
   216   000000                     
   217                           ; #config settings
   218                           
   219                           	psect	cinit
   220   000D1C                     __pcinit:
   221                           	callstack 0
   222   000D1C                     start_initialization:
   223                           	callstack 0
   224   000D1C                     __initialization:
   225                           	callstack 0
   226                           
   227                           ; Initialize objects allocated to COMRAM (20 bytes)
   228                           ; load TBLPTR registers with __pidataCOMRAM
   229   000D1C  0EA0               	movlw	low __pidataCOMRAM
   230   000D1E  6EF6               	movwf	tblptrl,c
   231   000D20  0E0D               	movlw	high __pidataCOMRAM
   232   000D22  6EF7               	movwf	tblptrh,c
   233   000D24  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   234   000D26  6EF8               	movwf	tblptru,c
   235   000D28  EE00  F03A         	lfsr	0,__pdataCOMRAM
   236   000D2C  EE10 F014          	lfsr	1,20
   237   000D30                     copy_data0:
   238   000D30  0009               	tblrd		*+
   239   000D32  CFF5 FFEE          	movff	tablat,postinc0
   240   000D36  50E5               	movf	postdec1,w,c
   241   000D38  50E1               	movf	fsr1l,w,c
   242   000D3A  E1FA               	bnz	copy_data0
   243   000D3C                     end_of_initialization:
   244                           	callstack 0
   245   000D3C                     __end_of__initialization:
   246                           	callstack 0
   247   000D3C  0E00               	movlw	low (__Lsmallconst shr (0+16))
   248   000D3E  6EF8               	movwf	tblptru,c
   249   000D40  0E06               	movlw	high __Lsmallconst
   250   000D42  6EF7               	movwf	tblptrh,c
   251   000D44  0100               	movlb	0
   252   000D46  EF34  F003         	goto	_main	;jump to C main() function
   253                           
   254                           	psect	dataCOMRAM
   255   00003A                     __pdataCOMRAM:
   256                           	callstack 0
   257   00003A                     main@F10669:
   258                           	callstack 0
   259   00003A                     	ds	5
   260   00003F                     main@F10667:
   261                           	callstack 0
   262   00003F                     	ds	5
   263   000044                     main@F10665:
   264                           	callstack 0
   265   000044                     	ds	5
   266   000049                     main@F10663:
   267                           	callstack 0
   268   000049                     	ds	5
   269                           
   270                           	psect	cstackCOMRAM
   271   000001                     __pcstackCOMRAM:
   272                           	callstack 0
   273   000001                     ?_strcmp:
   274                           	callstack 0
   275   000001                     lcdcmd@a:
   276                           	callstack 0
   277   000001                     data@a:
   278                           	callstack 0
   279   000001                     strcmp@l:
   280                           	callstack 0
   281   000001                     strcpy@dest:
   282                           	callstack 0
   283                           
   284                           ; 1 bytes @ 0x0
   285   000001                     	ds	1
   286   000002                     strcmp@r:
   287                           	callstack 0
   288   000002                     strcpy@src:
   289                           	callstack 0
   290   000002                     lcdcmd@i:
   291                           	callstack 0
   292   000002                     data@i:
   293                           	callstack 0
   294                           
   295                           ; 2 bytes @ 0x1
   296   000002                     	ds	1
   297   000003                     ??_strcmp:
   298   000003                     strcpy@d:
   299                           	callstack 0
   300                           
   301                           ; 1 bytes @ 0x2
   302   000003                     	ds	1
   303   000004                     lcdcmd@i_53:
   304                           	callstack 0
   305   000004                     data@i_57:
   306                           	callstack 0
   307                           
   308                           ; 2 bytes @ 0x3
   309   000004                     	ds	2
   310   000006                     display@p:
   311                           	callstack 0
   312                           
   313                           ; 1 bytes @ 0x5
   314   000006                     	ds	1
   315   000007                     main@pass_temp2:
   316                           	callstack 0
   317                           
   318                           ; 5 bytes @ 0x6
   319   000007                     	ds	5
   320   00000C                     main@pass:
   321                           	callstack 0
   322                           
   323                           ; 5 bytes @ 0xB
   324   00000C                     	ds	5
   325   000011                     main@pass_temp1:
   326                           	callstack 0
   327                           
   328                           ; 5 bytes @ 0x10
   329   000011                     	ds	5
   330   000016                     main@a:
   331                           	callstack 0
   332                           
   333                           ; 5 bytes @ 0x15
   334   000016                     	ds	5
   335   00001B                     main@i_84:
   336                           	callstack 0
   337                           
   338                           ; 4 bytes @ 0x1A
   339   00001B                     	ds	4
   340   00001F                     main@i_90:
   341                           	callstack 0
   342                           
   343                           ; 4 bytes @ 0x1E
   344   00001F                     	ds	4
   345   000023                     main@i_92:
   346                           	callstack 0
   347                           
   348                           ; 4 bytes @ 0x22
   349   000023                     	ds	4
   350   000027                     main@i_94:
   351                           	callstack 0
   352                           
   353                           ; 4 bytes @ 0x26
   354   000027                     	ds	4
   355   00002B                     main@i_96:
   356                           	callstack 0
   357                           
   358                           ; 4 bytes @ 0x2A
   359   00002B                     	ds	4
   360   00002F                     main@i:
   361                           	callstack 0
   362                           
   363                           ; 2 bytes @ 0x2E
   364   00002F                     	ds	2
   365   000031                     main@i_86:
   366                           	callstack 0
   367                           
   368                           ; 2 bytes @ 0x30
   369   000031                     	ds	2
   370   000033                     main@i_88:
   371                           	callstack 0
   372                           
   373                           ; 2 bytes @ 0x32
   374   000033                     	ds	2
   375   000035                     main@j:
   376                           	callstack 0
   377                           
   378                           ; 4 bytes @ 0x34
   379   000035                     	ds	4
   380   000039                     main@s:
   381                           	callstack 0
   382                           
   383                           ; 1 bytes @ 0x38
   384   000039                     	ds	1
   385                           
   386 ;;
   387 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   388 ;;
   389 ;; *************** function _main *****************
   390 ;; Defined at:
   391 ;;		line 121 in file "lcd.c"
   392 ;; Parameters:    Size  Location     Type
   393 ;;		None
   394 ;; Auto vars:     Size  Location     Type
   395 ;;  i               4   42[COMRAM] long 
   396 ;;  i               4   38[COMRAM] long 
   397 ;;  i               4   34[COMRAM] long 
   398 ;;  i               4   30[COMRAM] long 
   399 ;;  i               4   26[COMRAM] long 
   400 ;;  i               2   50[COMRAM] int 
   401 ;;  i               2   48[COMRAM] int 
   402 ;;  i               2   46[COMRAM] int 
   403 ;;  j               4   52[COMRAM] long 
   404 ;;  a               5   21[COMRAM] unsigned char [5]
   405 ;;  pass_temp1      5   16[COMRAM] unsigned char [5]
   406 ;;  pass            5   11[COMRAM] unsigned char [5]
   407 ;;  pass_temp2      5    6[COMRAM] unsigned char [5]
   408 ;;  s               1   56[COMRAM] unsigned char 
   409 ;; Return value:  Size  Location     Type
   410 ;;                  1    wreg      void 
   411 ;; Registers used:
   412 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   413 ;; Tracked objects:
   414 ;;		On entry : 0/0
   415 ;;		On exit  : 0/0
   416 ;;		Unchanged: 0/0
   417 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   418 ;;      Params:         0       0       0       0       0       0       0
   419 ;;      Locals:        51       0       0       0       0       0       0
   420 ;;      Temps:          0       0       0       0       0       0       0
   421 ;;      Totals:        51       0       0       0       0       0       0
   422 ;;Total ram usage:       51 bytes
   423 ;; Hardware stack levels required when called: 2
   424 ;; This function calls:
   425 ;;		_data
   426 ;;		_display
   427 ;;		_keypad
   428 ;;		_lcdcmd
   429 ;;		_strcmp
   430 ;;		_strcpy
   431 ;; This function is called by:
   432 ;;		Startup code after reset
   433 ;; This function uses a non-reentrant model
   434 ;;
   435                           
   436                           	psect	text0
   437   000668                     __ptext0:
   438                           	callstack 0
   439   000668                     _main:
   440                           	callstack 29
   441   000668                     
   442                           ;lcd.c: 123:        lcdcmd(0xc0);
   443   000668  0E0F               	movlw	15
   444   00066A  6EC1               	movwf	193,c	;volatile
   445                           
   446                           ;lcd.c: 124:             for(long j=0;j<4;j++)
   447   00066C  0EF0               	movlw	240
   448   00066E  6E93               	movwf	147,c	;volatile
   449                           
   450                           ;lcd.c: 125:             {
   451   000670  0E00               	movlw	0
   452   000672  6E92               	movwf	146,c	;volatile
   453                           
   454                           ;lcd.c: 126:                 s=keypad();
   455   000674  0E00               	movlw	0
   456   000676  6E95               	movwf	149,c	;volatile
   457   000678  CF95 FF94          	movff	3989,3988	;volatile
   458   00067C                     
   459                           ;lcd.c: 127:                 while( RB4==0 || RB5==0 || RB6==0 || RB7==0 );
   460   00067C  0E01               	movlw	1
   461   00067E  ECFF  F005         	call	_lcdcmd
   462   000682                     
   463                           ;lcd.c: 128:                 a[j]=s;
   464   000682  0E0F               	movlw	15
   465   000684  ECFF  F005         	call	_lcdcmd
   466   000688                     
   467                           ;lcd.c: 129:                 if(s=='r')
   468   000688  0E38               	movlw	56
   469   00068A  ECFF  F005         	call	_lcdcmd
   470   00068E                     
   471                           ;lcd.c: 130:                 {
   472   00068E  EE20  F049         	lfsr	2,main@F10663
   473   000692  EE10  F016         	lfsr	1,main@a
   474   000696  0E04               	movlw	4
   475   000698                     u501:
   476   000698  CFDB FFE3          	movff	plusw2,plusw1
   477   00069C  06E8               	decf	wreg,f,c
   478   00069E  E2FC               	bc	u501
   479   0006A0  EE20  F044         	lfsr	2,main@F10665
   480   0006A4  EE10  F00C         	lfsr	1,main@pass
   481   0006A8  0E04               	movlw	4
   482   0006AA                     u511:
   483   0006AA  CFDB FFE3          	movff	plusw2,plusw1
   484   0006AE  06E8               	decf	wreg,f,c
   485   0006B0  E2FC               	bc	u511
   486   0006B2  EE20  F03F         	lfsr	2,main@F10667
   487   0006B6  EE10  F011         	lfsr	1,main@pass_temp1
   488   0006BA  0E04               	movlw	4
   489   0006BC                     u521:
   490   0006BC  CFDB FFE3          	movff	plusw2,plusw1
   491   0006C0  06E8               	decf	wreg,f,c
   492   0006C2  E2FC               	bc	u521
   493   0006C4  EE20  F03A         	lfsr	2,main@F10669
   494   0006C8  EE10  F007         	lfsr	1,main@pass_temp2
   495   0006CC  0E04               	movlw	4
   496   0006CE                     u531:
   497   0006CE  CFDB FFE3          	movff	plusw2,plusw1
   498   0006D2  06E8               	decf	wreg,f,c
   499   0006D4  E2FC               	bc	u531
   500   0006D6                     l1204:
   501                           
   502                           ;lcd.c: 133:                     display("enter old pass");;lcd.c: 134:                 
      +                              lcdcmd(0xC0);
   503   0006D6  0E01               	movlw	1
   504   0006D8  ECFF  F005         	call	_lcdcmd
   505   0006DC                     
   506                           ;lcd.c: 135:                     for(int i=0;i<4;i++)
   507   0006DC  0E80               	movlw	128
   508   0006DE  ECFF  F005         	call	_lcdcmd
   509   0006E2                     
   510                           ;lcd.c: 136:                     {
   511   0006E2  0E52               	movlw	low STR_1
   512   0006E4  6E06               	movwf	display@p^0,c
   513   0006E6  ECA5  F006         	call	_display	;wreg free
   514   0006EA                     
   515                           ;lcd.c: 137:                         s=keypad();
   516   0006EA  0EC0               	movlw	192
   517   0006EC  ECFF  F005         	call	_lcdcmd
   518   0006F0                     
   519                           ;lcd.c: 138:                         data(s);
   520   0006F0  0E00               	movlw	0
   521   0006F2  6E35               	movwf	main@j^0,c
   522   0006F4  0E00               	movlw	0
   523   0006F6  6E36               	movwf	(main@j+1)^0,c
   524   0006F8  0E00               	movlw	0
   525   0006FA  6E37               	movwf	(main@j+2)^0,c
   526   0006FC  0E00               	movlw	0
   527   0006FE  6E38               	movwf	(main@j+3)^0,c
   528   000700                     l1218:
   529                           
   530                           ;lcd.c: 139:                         a[i]=s;;lcd.c: 140:                     }
   531   000700  EC66  F005         	call	_keypad	;wreg free
   532   000704  6E39               	movwf	main@s^0,c
   533   000706                     l102:
   534   000706  A881               	btfss	3969,4,c	;volatile
   535   000708  EF88  F003         	goto	u541
   536   00070C  EF8A  F003         	goto	u540
   537   000710                     u541:
   538   000710  EF83  F003         	goto	l102
   539   000714                     u540:
   540   000714  AA81               	btfss	3969,5,c	;volatile
   541   000716  EF8F  F003         	goto	u551
   542   00071A  EF91  F003         	goto	u550
   543   00071E                     u551:
   544   00071E  EF83  F003         	goto	l102
   545   000722                     u550:
   546   000722  AC81               	btfss	3969,6,c	;volatile
   547   000724  EF96  F003         	goto	u561
   548   000728  EF98  F003         	goto	u560
   549   00072C                     u561:
   550   00072C  EF83  F003         	goto	l102
   551   000730                     u560:
   552   000730  AE81               	btfss	3969,7,c	;volatile
   553   000732  EF9D  F003         	goto	u571
   554   000736  EF9F  F003         	goto	u570
   555   00073A                     u571:
   556   00073A  EF83  F003         	goto	l102
   557   00073E                     u570:
   558   00073E                     
   559                           ;lcd.c: 142:                     {
   560   00073E  5035               	movf	main@j^0,w,c
   561   000740  0F16               	addlw	low main@a
   562   000742  6ED9               	movwf	fsr2l,c
   563   000744  6ADA               	clrf	fsr2h,c
   564   000746  C039  FFDF         	movff	main@s,indf2
   565   00074A                     
   566                           ;lcd.c: 143:                     lcdcmd(0x01);
   567   00074A  0E72               	movlw	114
   568   00074C  1839               	xorwf	main@s^0,w,c
   569   00074E  A4D8               	btfss	status,2,c
   570   000750  EFAC  F003         	goto	u581
   571   000754  EFAE  F003         	goto	u580
   572   000758                     u581:
   573   000758  EFDA  F004         	goto	l1340
   574   00075C                     u580:
   575   00075C                     
   576                           ;lcd.c: 144:                     lcdcmd(0x80);;lcd.c: 145:                     display("
      +                          wrong pass");
   577   00075C  0E01               	movlw	1
   578   00075E  ECFF  F005         	call	_lcdcmd
   579                           
   580                           ;lcd.c: 146:                     for(long i=0;i<5000;i++);
   581   000762  0E80               	movlw	128
   582   000764  ECFF  F005         	call	_lcdcmd
   583   000768                     
   584                           ;lcd.c: 147:                     break;
   585   000768  0E10               	movlw	low STR_2
   586   00076A  6E06               	movwf	display@p^0,c
   587   00076C  ECA5  F006         	call	_display	;wreg free
   588   000770                     
   589                           ;lcd.c: 148:                     }
   590   000770  0EC0               	movlw	192
   591   000772  ECFF  F005         	call	_lcdcmd
   592   000776                     
   593                           ;lcd.c: 149: 
   594   000776  0E00               	movlw	0
   595   000778  6E30               	movwf	(main@i+1)^0,c
   596   00077A  0E00               	movlw	0
   597   00077C  6E2F               	movwf	main@i^0,c
   598   00077E                     l1242:
   599                           
   600                           ;lcd.c: 150:                     lcdcmd(0x01);;lcd.c: 151:                     lcdcmd(0x
      +                          80);
   601   00077E  EC66  F005         	call	_keypad	;wreg free
   602   000782  6E39               	movwf	main@s^0,c
   603   000784                     
   604                           ;lcd.c: 152:                     display("enter new pass");
   605   000784  5039               	movf	main@s^0,w,c
   606   000786  EC2F  F006         	call	_data
   607   00078A                     
   608                           ;lcd.c: 153:                     lcdcmd(0xC0);
   609   00078A  502F               	movf	main@i^0,w,c
   610   00078C  0F16               	addlw	low main@a
   611   00078E  6ED9               	movwf	fsr2l,c
   612   000790  6ADA               	clrf	fsr2h,c
   613   000792  C039  FFDF         	movff	main@s,indf2
   614   000796                     
   615                           ;lcd.c: 154:                     for(int i=0;i<4;i++)
   616   000796  4A2F               	infsnz	main@i^0,f,c
   617   000798  2A30               	incf	(main@i+1)^0,f,c
   618   00079A  BE30               	btfsc	(main@i+1)^0,7,c
   619   00079C  EFD9  F003         	goto	u591
   620   0007A0  5030               	movf	(main@i+1)^0,w,c
   621   0007A2  E109               	bnz	u590
   622   0007A4  0E04               	movlw	4
   623   0007A6  5C2F               	subwf	main@i^0,w,c
   624   0007A8  A0D8               	btfss	status,0,c
   625   0007AA  EFD9  F003         	goto	u591
   626   0007AE  EFDB  F003         	goto	u590
   627   0007B2                     u591:
   628   0007B2  EFBF  F003         	goto	l1242
   629   0007B6                     u590:
   630   0007B6                     
   631                           ;lcd.c: 155:                     {
   632   0007B6  0E16               	movlw	low main@a
   633   0007B8  6E01               	movwf	strcmp@l^0,c
   634   0007BA  0E0C               	movlw	low main@pass
   635   0007BC  6E02               	movwf	strcmp@r^0,c
   636   0007BE  EC5F  F006         	call	_strcmp	;wreg free
   637   0007C2  5001               	movf	?_strcmp^0,w,c
   638   0007C4  1002               	iorwf	(?_strcmp+1)^0,w,c
   639   0007C6  B4D8               	btfsc	status,2,c
   640   0007C8  EFE8  F003         	goto	u601
   641   0007CC  EFEA  F003         	goto	u600
   642   0007D0                     u601:
   643   0007D0  EF15  F004         	goto	l1266
   644   0007D4                     u600:
   645   0007D4                     
   646                           ;lcd.c: 156:                         s=keypad();;lcd.c: 157:                         dat
      +                          a(s);
   647   0007D4  0E01               	movlw	1
   648   0007D6  ECFF  F005         	call	_lcdcmd
   649                           
   650                           ;lcd.c: 158:                         pass_temp1[i]=s;
   651   0007DA  0E80               	movlw	128
   652   0007DC  ECFF  F005         	call	_lcdcmd
   653   0007E0                     
   654                           ;lcd.c: 159:                     }
   655   0007E0  0E47               	movlw	low STR_3
   656   0007E2  6E06               	movwf	display@p^0,c
   657   0007E4  ECA5  F006         	call	_display	;wreg free
   658   0007E8                     
   659                           ;lcd.c: 160:                     lcdcmd(0x01);
   660   0007E8  0E00               	movlw	0
   661   0007EA  6E1B               	movwf	main@i_84^0,c
   662   0007EC  0E00               	movlw	0
   663   0007EE  6E1C               	movwf	(main@i_84+1)^0,c
   664   0007F0  0E00               	movlw	0
   665   0007F2  6E1D               	movwf	(main@i_84+2)^0,c
   666   0007F4  0E00               	movlw	0
   667   0007F6  6E1E               	movwf	(main@i_84+3)^0,c
   668   0007F8                     l1264:
   669   0007F8  0E01               	movlw	1
   670   0007FA  261B               	addwf	main@i_84^0,f,c
   671   0007FC  0E00               	movlw	0
   672   0007FE  221C               	addwfc	(main@i_84+1)^0,f,c
   673   000800  221D               	addwfc	(main@i_84+2)^0,f,c
   674   000802  221E               	addwfc	(main@i_84+3)^0,f,c
   675   000804  BE1E               	btfsc	(main@i_84+3)^0,7,c
   676   000806  EF11  F004         	goto	u611
   677   00080A  501E               	movf	(main@i_84+3)^0,w,c
   678   00080C  101D               	iorwf	(main@i_84+2)^0,w,c
   679   00080E  E10B               	bnz	u610
   680   000810  0E88               	movlw	136
   681   000812  5C1B               	subwf	main@i_84^0,w,c
   682   000814  0E13               	movlw	19
   683   000816  581C               	subwfb	(main@i_84+1)^0,w,c
   684   000818  A0D8               	btfss	status,0,c
   685   00081A  EF11  F004         	goto	u611
   686   00081E  EF13  F004         	goto	u610
   687   000822                     u611:
   688   000822  EFFC  F003         	goto	l1264
   689   000826                     u610:
   690   000826  EF6B  F003         	goto	l1204
   691   00082A                     l1266:
   692                           
   693                           ;lcd.c: 164:                     for(int i=0;i<4;i++)
   694   00082A  0E01               	movlw	1
   695   00082C  ECFF  F005         	call	_lcdcmd
   696                           
   697                           ;lcd.c: 165:                     {
   698   000830  0E80               	movlw	128
   699   000832  ECFF  F005         	call	_lcdcmd
   700   000836                     
   701                           ;lcd.c: 166:                         s=keypad();
   702   000836  0E1F               	movlw	low STR_4
   703   000838  6E06               	movwf	display@p^0,c
   704   00083A  ECA5  F006         	call	_display	;wreg free
   705   00083E                     
   706                           ;lcd.c: 167:                         data(s);
   707   00083E  0EC0               	movlw	192
   708   000840  ECFF  F005         	call	_lcdcmd
   709   000844                     
   710                           ;lcd.c: 168:                         pass_temp2[i]=s;
   711   000844  0E00               	movlw	0
   712   000846  6E32               	movwf	(main@i_86+1)^0,c
   713   000848  0E00               	movlw	0
   714   00084A  6E31               	movwf	main@i_86^0,c
   715   00084C                     l1278:
   716                           
   717                           ;lcd.c: 169:                     };lcd.c: 170: 
   718   00084C  EC66  F005         	call	_keypad	;wreg free
   719   000850  6E39               	movwf	main@s^0,c
   720   000852                     
   721                           ;lcd.c: 171:                     if(strcmp(pass_temp1,pass_temp2)==0)
   722   000852  5039               	movf	main@s^0,w,c
   723   000854  EC2F  F006         	call	_data
   724   000858                     
   725                           ;lcd.c: 172:                     {
   726   000858  5031               	movf	main@i_86^0,w,c
   727   00085A  0F11               	addlw	low main@pass_temp1
   728   00085C  6ED9               	movwf	fsr2l,c
   729   00085E  6ADA               	clrf	fsr2h,c
   730   000860  C039  FFDF         	movff	main@s,indf2
   731   000864                     
   732                           ;lcd.c: 173:                     lcdcmd(0x01);
   733   000864  4A31               	infsnz	main@i_86^0,f,c
   734   000866  2A32               	incf	(main@i_86+1)^0,f,c
   735   000868  BE32               	btfsc	(main@i_86+1)^0,7,c
   736   00086A  EF40  F004         	goto	u621
   737   00086E  5032               	movf	(main@i_86+1)^0,w,c
   738   000870  E109               	bnz	u620
   739   000872  0E04               	movlw	4
   740   000874  5C31               	subwf	main@i_86^0,w,c
   741   000876  A0D8               	btfss	status,0,c
   742   000878  EF40  F004         	goto	u621
   743   00087C  EF42  F004         	goto	u620
   744   000880                     u621:
   745   000880  EF26  F004         	goto	l1278
   746   000884                     u620:
   747   000884                     
   748                           ;lcd.c: 174:                     lcdcmd(0x80);
   749   000884  0E01               	movlw	1
   750   000886  ECFF  F005         	call	_lcdcmd
   751                           
   752                           ;lcd.c: 175:                     strcpy(pass,pass_temp1);
   753   00088A  0E80               	movlw	128
   754   00088C  ECFF  F005         	call	_lcdcmd
   755   000890                     
   756                           ;lcd.c: 176:                     display("pass set");
   757   000890  0E3B               	movlw	low STR_5
   758   000892  6E06               	movwf	display@p^0,c
   759   000894  ECA5  F006         	call	_display	;wreg free
   760   000898                     
   761                           ;lcd.c: 177:                     for(long i=0;i<5000;i++);
   762   000898  0EC0               	movlw	192
   763   00089A  ECFF  F005         	call	_lcdcmd
   764   00089E                     
   765                           ;lcd.c: 178:                     break;
   766   00089E  0E00               	movlw	0
   767   0008A0  6E34               	movwf	(main@i_88+1)^0,c
   768   0008A2  0E00               	movlw	0
   769   0008A4  6E33               	movwf	main@i_88^0,c
   770   0008A6                     l1300:
   771                           
   772                           ;lcd.c: 179:                     };lcd.c: 180:                     else
   773   0008A6  EC66  F005         	call	_keypad	;wreg free
   774   0008AA  6E39               	movwf	main@s^0,c
   775   0008AC                     
   776                           ;lcd.c: 181:                     {
   777   0008AC  5039               	movf	main@s^0,w,c
   778   0008AE  EC2F  F006         	call	_data
   779   0008B2                     
   780                           ;lcd.c: 182:                     lcdcmd(0x01);
   781   0008B2  5033               	movf	main@i_88^0,w,c
   782   0008B4  0F07               	addlw	low main@pass_temp2
   783   0008B6  6ED9               	movwf	fsr2l,c
   784   0008B8  6ADA               	clrf	fsr2h,c
   785   0008BA  C039  FFDF         	movff	main@s,indf2
   786   0008BE                     
   787                           ;lcd.c: 183:                     lcdcmd(0x80);
   788   0008BE  4A33               	infsnz	main@i_88^0,f,c
   789   0008C0  2A34               	incf	(main@i_88+1)^0,f,c
   790   0008C2  BE34               	btfsc	(main@i_88+1)^0,7,c
   791   0008C4  EF6D  F004         	goto	u631
   792   0008C8  5034               	movf	(main@i_88+1)^0,w,c
   793   0008CA  E109               	bnz	u630
   794   0008CC  0E04               	movlw	4
   795   0008CE  5C33               	subwf	main@i_88^0,w,c
   796   0008D0  A0D8               	btfss	status,0,c
   797   0008D2  EF6D  F004         	goto	u631
   798   0008D6  EF6F  F004         	goto	u630
   799   0008DA                     u631:
   800   0008DA  EF53  F004         	goto	l1300
   801   0008DE                     u630:
   802   0008DE                     
   803                           ;lcd.c: 185:                     for(long i=0;i<5000;i++);
   804   0008DE  0E11               	movlw	low main@pass_temp1
   805   0008E0  6E01               	movwf	strcmp@l^0,c
   806   0008E2  0E07               	movlw	low main@pass_temp2
   807   0008E4  6E02               	movwf	strcmp@r^0,c
   808   0008E6  EC5F  F006         	call	_strcmp	;wreg free
   809   0008EA  5001               	movf	?_strcmp^0,w,c
   810   0008EC  1002               	iorwf	(?_strcmp+1)^0,w,c
   811   0008EE  A4D8               	btfss	status,2,c
   812   0008F0  EF7C  F004         	goto	u641
   813   0008F4  EF7E  F004         	goto	u640
   814   0008F8                     u641:
   815   0008F8  EFAF  F004         	goto	l1328
   816   0008FC                     u640:
   817   0008FC                     
   818                           ;lcd.c: 186:                     break;;lcd.c: 187:                     }
   819   0008FC  0E01               	movlw	1
   820   0008FE  ECFF  F005         	call	_lcdcmd
   821                           
   822                           ;lcd.c: 188:                 }
   823   000902  0E80               	movlw	128
   824   000904  ECFF  F005         	call	_lcdcmd
   825   000908                     
   826                           ;lcd.c: 189: 
   827   000908  0E0C               	movlw	low main@pass
   828   00090A  6E01               	movwf	strcpy@dest^0,c
   829   00090C  0E11               	movlw	low main@pass_temp1
   830   00090E  6E02               	movwf	strcpy@src^0,c
   831   000910  ECBB  F006         	call	_strcpy	;wreg free
   832   000914                     
   833                           ;lcd.c: 190:                 data(s);
   834   000914  0E5D               	movlw	low STR_6
   835   000916  6E06               	movwf	display@p^0,c
   836   000918  ECA5  F006         	call	_display	;wreg free
   837   00091C                     
   838                           ;lcd.c: 191: 
   839   00091C  0E00               	movlw	0
   840   00091E  6E1F               	movwf	main@i_90^0,c
   841   000920  0E00               	movlw	0
   842   000922  6E20               	movwf	(main@i_90+1)^0,c
   843   000924  0E00               	movlw	0
   844   000926  6E21               	movwf	(main@i_90+2)^0,c
   845   000928  0E00               	movlw	0
   846   00092A  6E22               	movwf	(main@i_90+3)^0,c
   847   00092C                     l1324:
   848   00092C  0E01               	movlw	1
   849   00092E  261F               	addwf	main@i_90^0,f,c
   850   000930  0E00               	movlw	0
   851   000932  2220               	addwfc	(main@i_90+1)^0,f,c
   852   000934  2221               	addwfc	(main@i_90+2)^0,f,c
   853   000936  2222               	addwfc	(main@i_90+3)^0,f,c
   854   000938  BE22               	btfsc	(main@i_90+3)^0,7,c
   855   00093A  EFAB  F004         	goto	u651
   856   00093E  5022               	movf	(main@i_90+3)^0,w,c
   857   000940  1021               	iorwf	(main@i_90+2)^0,w,c
   858   000942  E10B               	bnz	u650
   859   000944  0E88               	movlw	136
   860   000946  5C1F               	subwf	main@i_90^0,w,c
   861   000948  0E13               	movlw	19
   862   00094A  5820               	subwfb	(main@i_90+1)^0,w,c
   863   00094C  A0D8               	btfss	status,0,c
   864   00094E  EFAB  F004         	goto	u651
   865   000952  EFAD  F004         	goto	u650
   866   000956                     u651:
   867   000956  EF96  F004         	goto	l1324
   868   00095A                     u650:
   869   00095A  EF6B  F003         	goto	l1204
   870   00095E                     l1328:
   871                           
   872                           ;lcd.c: 195:                     {;lcd.c: 196:                         lcdcmd(0x01);
   873   00095E  0E01               	movlw	1
   874   000960  ECFF  F005         	call	_lcdcmd
   875                           
   876                           ;lcd.c: 197:                         lcdcmd(0x80);
   877   000964  0E80               	movlw	128
   878   000966  ECFF  F005         	call	_lcdcmd
   879   00096A                     
   880                           ;lcd.c: 198:                         display("correct pass");
   881   00096A  0E01               	movlw	low STR_7
   882   00096C  6E06               	movwf	display@p^0,c
   883   00096E  ECA5  F006         	call	_display	;wreg free
   884   000972                     
   885                           ;lcd.c: 199:                         for(long i=0;i<5000;i++);
   886   000972  0E00               	movlw	0
   887   000974  6E23               	movwf	main@i_92^0,c
   888   000976  0E00               	movlw	0
   889   000978  6E24               	movwf	(main@i_92+1)^0,c
   890   00097A  0E00               	movlw	0
   891   00097C  6E25               	movwf	(main@i_92+2)^0,c
   892   00097E  0E00               	movlw	0
   893   000980  6E26               	movwf	(main@i_92+3)^0,c
   894   000982                     l1338:
   895   000982  0E01               	movlw	1
   896   000984  2623               	addwf	main@i_92^0,f,c
   897   000986  0E00               	movlw	0
   898   000988  2224               	addwfc	(main@i_92+1)^0,f,c
   899   00098A  2225               	addwfc	(main@i_92+2)^0,f,c
   900   00098C  2226               	addwfc	(main@i_92+3)^0,f,c
   901   00098E  BE26               	btfsc	(main@i_92+3)^0,7,c
   902   000990  EFD6  F004         	goto	u661
   903   000994  5026               	movf	(main@i_92+3)^0,w,c
   904   000996  1025               	iorwf	(main@i_92+2)^0,w,c
   905   000998  E10B               	bnz	u660
   906   00099A  0E88               	movlw	136
   907   00099C  5C23               	subwf	main@i_92^0,w,c
   908   00099E  0E13               	movlw	19
   909   0009A0  5824               	subwfb	(main@i_92+1)^0,w,c
   910   0009A2  A0D8               	btfss	status,0,c
   911   0009A4  EFD6  F004         	goto	u661
   912   0009A8  EFD8  F004         	goto	u660
   913   0009AC                     u661:
   914   0009AC  EFC1  F004         	goto	l1338
   915   0009B0                     u660:
   916   0009B0  EF6B  F003         	goto	l1204
   917   0009B4                     l1340:
   918                           
   919                           ;lcd.c: 204:                         lcdcmd(0x80);
   920   0009B4  5039               	movf	main@s^0,w,c
   921   0009B6  EC2F  F006         	call	_data
   922   0009BA                     
   923                           ;lcd.c: 206:                         for(long i=0;i<5000;i++);
   924   0009BA  0E03               	movlw	3
   925   0009BC  1835               	xorwf	main@j^0,w,c
   926   0009BE  1036               	iorwf	(main@j+1)^0,w,c
   927   0009C0  1037               	iorwf	(main@j+2)^0,w,c
   928   0009C2  1038               	iorwf	(main@j+3)^0,w,c
   929   0009C4  A4D8               	btfss	status,2,c
   930   0009C6  EFE7  F004         	goto	u671
   931   0009CA  EFE9  F004         	goto	u670
   932   0009CE                     u671:
   933   0009CE  EF4C  F005         	goto	l1370
   934   0009D2                     u670:
   935   0009D2                     
   936                           ;lcd.c: 207:                     };lcd.c: 208:                 }
   937   0009D2  0E16               	movlw	low main@a
   938   0009D4  6E01               	movwf	strcmp@l^0,c
   939   0009D6  0E0C               	movlw	low main@pass
   940   0009D8  6E02               	movwf	strcmp@r^0,c
   941   0009DA  EC5F  F006         	call	_strcmp	;wreg free
   942   0009DE  5001               	movf	?_strcmp^0,w,c
   943   0009E0  1002               	iorwf	(?_strcmp+1)^0,w,c
   944   0009E2  A4D8               	btfss	status,2,c
   945   0009E4  EFF6  F004         	goto	u681
   946   0009E8  EFF8  F004         	goto	u680
   947   0009EC                     u681:
   948   0009EC  EF23  F005         	goto	l1358
   949   0009F0                     u680:
   950   0009F0                     
   951                           ;lcd.c: 209: ;lcd.c: 210:             }
   952   0009F0  0E01               	movlw	1
   953   0009F2  ECFF  F005         	call	_lcdcmd
   954                           
   955                           ;lcd.c: 211:     }
   956   0009F6  0E80               	movlw	128
   957   0009F8  ECFF  F005         	call	_lcdcmd
   958   0009FC                     
   959                           ;lcd.c: 212: 
   960   0009FC  0E2E               	movlw	low STR_8
   961   0009FE  6E06               	movwf	display@p^0,c
   962   000A00  ECA5  F006         	call	_display	;wreg free
   963   000A04                     
   964                           ;lcd.c: 213:     return;
   965   000A04  0E00               	movlw	0
   966   000A06  6E27               	movwf	main@i_94^0,c
   967   000A08  0E00               	movlw	0
   968   000A0A  6E28               	movwf	(main@i_94+1)^0,c
   969   000A0C  0E00               	movlw	0
   970   000A0E  6E29               	movwf	(main@i_94+2)^0,c
   971   000A10  0E00               	movlw	0
   972   000A12  6E2A               	movwf	(main@i_94+3)^0,c
   973   000A14                     l1356:
   974   000A14  0E01               	movlw	1
   975   000A16  2627               	addwf	main@i_94^0,f,c
   976   000A18  0E00               	movlw	0
   977   000A1A  2228               	addwfc	(main@i_94+1)^0,f,c
   978   000A1C  2229               	addwfc	(main@i_94+2)^0,f,c
   979   000A1E  222A               	addwfc	(main@i_94+3)^0,f,c
   980   000A20  BE2A               	btfsc	(main@i_94+3)^0,7,c
   981   000A22  EF1F  F005         	goto	u691
   982   000A26  502A               	movf	(main@i_94+3)^0,w,c
   983   000A28  1029               	iorwf	(main@i_94+2)^0,w,c
   984   000A2A  E10B               	bnz	u690
   985   000A2C  0E88               	movlw	136
   986   000A2E  5C27               	subwf	main@i_94^0,w,c
   987   000A30  0E13               	movlw	19
   988   000A32  5828               	subwfb	(main@i_94+1)^0,w,c
   989   000A34  A0D8               	btfss	status,0,c
   990   000A36  EF1F  F005         	goto	u691
   991   000A3A  EF21  F005         	goto	u690
   992   000A3E                     u691:
   993   000A3E  EF0A  F005         	goto	l1356
   994   000A42                     u690:
   995   000A42  EF4C  F005         	goto	l1370
   996   000A46                     l1358:
   997   000A46  0E01               	movlw	1
   998   000A48  ECFF  F005         	call	_lcdcmd
   999   000A4C  0E80               	movlw	128
  1000   000A4E  ECFF  F005         	call	_lcdcmd
  1001   000A52  0E47               	movlw	low STR_3
  1002   000A54  6E06               	movwf	display@p^0,c
  1003   000A56  ECA5  F006         	call	_display	;wreg free
  1004   000A5A  0E00               	movlw	0
  1005   000A5C  6E2B               	movwf	main@i_96^0,c
  1006   000A5E  0E00               	movlw	0
  1007   000A60  6E2C               	movwf	(main@i_96+1)^0,c
  1008   000A62  0E00               	movlw	0
  1009   000A64  6E2D               	movwf	(main@i_96+2)^0,c
  1010   000A66  0E00               	movlw	0
  1011   000A68  6E2E               	movwf	(main@i_96+3)^0,c
  1012   000A6A                     l1368:
  1013   000A6A  0E01               	movlw	1
  1014   000A6C  262B               	addwf	main@i_96^0,f,c
  1015   000A6E  0E00               	movlw	0
  1016   000A70  222C               	addwfc	(main@i_96+1)^0,f,c
  1017   000A72  222D               	addwfc	(main@i_96+2)^0,f,c
  1018   000A74  222E               	addwfc	(main@i_96+3)^0,f,c
  1019   000A76  BE2E               	btfsc	(main@i_96+3)^0,7,c
  1020   000A78  EF4A  F005         	goto	u701
  1021   000A7C  502E               	movf	(main@i_96+3)^0,w,c
  1022   000A7E  102D               	iorwf	(main@i_96+2)^0,w,c
  1023   000A80  E10B               	bnz	u700
  1024   000A82  0E88               	movlw	136
  1025   000A84  5C2B               	subwf	main@i_96^0,w,c
  1026   000A86  0E13               	movlw	19
  1027   000A88  582C               	subwfb	(main@i_96+1)^0,w,c
  1028   000A8A  A0D8               	btfss	status,0,c
  1029   000A8C  EF4A  F005         	goto	u701
  1030   000A90  EF4C  F005         	goto	u700
  1031   000A94                     u701:
  1032   000A94  EF35  F005         	goto	l1368
  1033   000A98                     u700:
  1034   000A98                     l1370:
  1035   000A98  0E01               	movlw	1
  1036   000A9A  2635               	addwf	main@j^0,f,c
  1037   000A9C  0E00               	movlw	0
  1038   000A9E  2236               	addwfc	(main@j+1)^0,f,c
  1039   000AA0  2237               	addwfc	(main@j+2)^0,f,c
  1040   000AA2  2238               	addwfc	(main@j+3)^0,f,c
  1041   000AA4  BE38               	btfsc	(main@j+3)^0,7,c
  1042   000AA6  EF60  F005         	goto	u711
  1043   000AAA  5038               	movf	(main@j+3)^0,w,c
  1044   000AAC  1037               	iorwf	(main@j+2)^0,w,c
  1045   000AAE  1036               	iorwf	(main@j+1)^0,w,c
  1046   000AB0  E109               	bnz	u710
  1047   000AB2  0E04               	movlw	4
  1048   000AB4  5C35               	subwf	main@j^0,w,c
  1049   000AB6  A0D8               	btfss	status,0,c
  1050   000AB8  EF60  F005         	goto	u711
  1051   000ABC  EF62  F005         	goto	u710
  1052   000AC0                     u711:
  1053   000AC0  EF80  F003         	goto	l1218
  1054   000AC4                     u710:
  1055   000AC4  EF6B  F003         	goto	l1204
  1056   000AC8  EF00  F000         	goto	start
  1057   000ACC                     __end_of_main:
  1058                           	callstack 0
  1059                           
  1060 ;; *************** function _strcpy *****************
  1061 ;; Defined at:
  1062 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\strcpy.c"
  1063 ;; Parameters:    Size  Location     Type
  1064 ;;  dest            1    0[COMRAM] PTR unsigned char 
  1065 ;;		 -> main@pass(5), 
  1066 ;;  src             1    1[COMRAM] PTR const unsigned char 
  1067 ;;		 -> main@pass_temp1(5), 
  1068 ;; Auto vars:     Size  Location     Type
  1069 ;;  d               1    2[COMRAM] PTR unsigned char 
  1070 ;;		 -> main@pass(5), 
  1071 ;; Return value:  Size  Location     Type
  1072 ;;                  1    wreg      PTR unsigned char 
  1073 ;; Registers used:
  1074 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  1075 ;; Tracked objects:
  1076 ;;		On entry : 0/0
  1077 ;;		On exit  : 0/0
  1078 ;;		Unchanged: 0/0
  1079 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1080 ;;      Params:         2       0       0       0       0       0       0
  1081 ;;      Locals:         1       0       0       0       0       0       0
  1082 ;;      Temps:          0       0       0       0       0       0       0
  1083 ;;      Totals:         3       0       0       0       0       0       0
  1084 ;;Total ram usage:        3 bytes
  1085 ;; Hardware stack levels used: 1
  1086 ;; This function calls:
  1087 ;;		Nothing
  1088 ;; This function is called by:
  1089 ;;		_main
  1090 ;; This function uses a non-reentrant model
  1091 ;;
  1092                           
  1093                           	psect	text1
  1094   000D76                     __ptext1:
  1095                           	callstack 0
  1096   000D76                     _strcpy:
  1097                           	callstack 30
  1098   000D76  C001  F003         	movff	strcpy@dest,strcpy@d
  1099   000D7A                     l1186:
  1100   000D7A  2A02               	incf	strcpy@src^0,f,c
  1101   000D7C  0402               	decf	strcpy@src^0,w,c
  1102   000D7E  6ED9               	movwf	fsr2l,c
  1103   000D80  6ADA               	clrf	fsr2h,c
  1104   000D82  2A03               	incf	strcpy@d^0,f,c
  1105   000D84  0403               	decf	strcpy@d^0,w,c
  1106   000D86  6EE1               	movwf	fsr1l,c
  1107   000D88  6AE2               	clrf	fsr1h,c
  1108   000D8A  CFDF FFE7          	movff	indf2,indf1
  1109   000D8E  50E7               	movf	indf1,w,c
  1110   000D90  A4D8               	btfss	status,2,c
  1111   000D92  EFCD  F006         	goto	u491
  1112   000D96  EFCF  F006         	goto	u490
  1113   000D9A                     u491:
  1114   000D9A  EFBD  F006         	goto	l1186
  1115   000D9E                     u490:
  1116   000D9E  0012               	return		;funcret
  1117   000DA0                     __end_of_strcpy:
  1118                           	callstack 0
  1119                           
  1120 ;; *************** function _strcmp *****************
  1121 ;; Defined at:
  1122 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\strcmp.c"
  1123 ;; Parameters:    Size  Location     Type
  1124 ;;  l               1    0[COMRAM] PTR const unsigned char 
  1125 ;;		 -> main@pass_temp1(5), main@a(5), 
  1126 ;;  r               1    1[COMRAM] PTR const unsigned char 
  1127 ;;		 -> main@pass_temp2(5), main@pass(5), 
  1128 ;; Auto vars:     Size  Location     Type
  1129 ;;		None
  1130 ;; Return value:  Size  Location     Type
  1131 ;;                  2    0[COMRAM] int 
  1132 ;; Registers used:
  1133 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  1134 ;; Tracked objects:
  1135 ;;		On entry : 0/0
  1136 ;;		On exit  : 0/0
  1137 ;;		Unchanged: 0/0
  1138 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1139 ;;      Params:         2       0       0       0       0       0       0
  1140 ;;      Locals:         0       0       0       0       0       0       0
  1141 ;;      Temps:          2       0       0       0       0       0       0
  1142 ;;      Totals:         4       0       0       0       0       0       0
  1143 ;;Total ram usage:        4 bytes
  1144 ;; Hardware stack levels used: 1
  1145 ;; This function calls:
  1146 ;;		Nothing
  1147 ;; This function is called by:
  1148 ;;		_main
  1149 ;; This function uses a non-reentrant model
  1150 ;;
  1151                           
  1152                           	psect	text2
  1153   000CBE                     __ptext2:
  1154                           	callstack 0
  1155   000CBE                     _strcmp:
  1156                           	callstack 30
  1157   000CBE  EF63  F006         	goto	l1176
  1158   000CC2                     l1174:
  1159   000CC2  2A01               	incf	strcmp@l^0,f,c
  1160   000CC4  2A02               	incf	strcmp@r^0,f,c
  1161   000CC6                     l1176:
  1162   000CC6  5002               	movf	strcmp@r^0,w,c
  1163   000CC8  6ED9               	movwf	fsr2l,c
  1164   000CCA  6ADA               	clrf	fsr2h,c
  1165   000CCC  5001               	movf	strcmp@l^0,w,c
  1166   000CCE  6EE1               	movwf	fsr1l,c
  1167   000CD0  6AE2               	clrf	fsr1h,c
  1168   000CD2  50DE               	movf	postinc2,w,c
  1169   000CD4  18E6               	xorwf	postinc1,w,c
  1170   000CD6  A4D8               	btfss	status,2,c
  1171   000CD8  EF70  F006         	goto	u471
  1172   000CDC  EF72  F006         	goto	u470
  1173   000CE0                     u471:
  1174   000CE0  EF7D  F006         	goto	l1180
  1175   000CE4                     u470:
  1176   000CE4  5001               	movf	strcmp@l^0,w,c
  1177   000CE6  6ED9               	movwf	fsr2l,c
  1178   000CE8  6ADA               	clrf	fsr2h,c
  1179   000CEA  50DF               	movf	indf2,w,c
  1180   000CEC  A4D8               	btfss	status,2,c
  1181   000CEE  EF7B  F006         	goto	u481
  1182   000CF2  EF7D  F006         	goto	u480
  1183   000CF6                     u481:
  1184   000CF6  EF61  F006         	goto	l1174
  1185   000CFA                     u480:
  1186   000CFA                     l1180:
  1187   000CFA  5001               	movf	strcmp@l^0,w,c
  1188   000CFC  6ED9               	movwf	fsr2l,c
  1189   000CFE  6ADA               	clrf	fsr2h,c
  1190   000D00  50DF               	movf	indf2,w,c
  1191   000D02  6E03               	movwf	??_strcmp^0,c
  1192   000D04  5002               	movf	strcmp@r^0,w,c
  1193   000D06  6ED9               	movwf	fsr2l,c
  1194   000D08  6ADA               	clrf	fsr2h,c
  1195   000D0A  50DF               	movf	indf2,w,c
  1196   000D0C  6E04               	movwf	(??_strcmp+1)^0,c
  1197   000D0E  5004               	movf	(??_strcmp+1)^0,w,c
  1198   000D10  5C03               	subwf	??_strcmp^0,w,c
  1199   000D12  6E01               	movwf	?_strcmp^0,c
  1200   000D14  6A02               	clrf	(?_strcmp+1)^0,c
  1201   000D16  A0D8               	btfss	status,0,c
  1202   000D18  0602               	decf	(?_strcmp+1)^0,f,c
  1203   000D1A  0012               	return		;funcret
  1204   000D1C                     __end_of_strcmp:
  1205                           	callstack 0
  1206                           
  1207 ;; *************** function _lcdcmd *****************
  1208 ;; Defined at:
  1209 ;;		line 13 in file "lcd.c"
  1210 ;; Parameters:    Size  Location     Type
  1211 ;;  a               1    wreg     unsigned char 
  1212 ;; Auto vars:     Size  Location     Type
  1213 ;;  a               1    0[COMRAM] unsigned char 
  1214 ;;  i               2    3[COMRAM] int 
  1215 ;;  i               2    1[COMRAM] int 
  1216 ;; Return value:  Size  Location     Type
  1217 ;;                  1    wreg      void 
  1218 ;; Registers used:
  1219 ;;		wreg, status,2, status,0
  1220 ;; Tracked objects:
  1221 ;;		On entry : 0/0
  1222 ;;		On exit  : 0/0
  1223 ;;		Unchanged: 0/0
  1224 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1225 ;;      Params:         0       0       0       0       0       0       0
  1226 ;;      Locals:         5       0       0       0       0       0       0
  1227 ;;      Temps:          0       0       0       0       0       0       0
  1228 ;;      Totals:         5       0       0       0       0       0       0
  1229 ;;Total ram usage:        5 bytes
  1230 ;; Hardware stack levels used: 1
  1231 ;; This function calls:
  1232 ;;		Nothing
  1233 ;; This function is called by:
  1234 ;;		_main
  1235 ;; This function uses a non-reentrant model
  1236 ;;
  1237                           
  1238                           	psect	text3
  1239   000BFE                     __ptext3:
  1240                           	callstack 0
  1241   000BFE                     _lcdcmd:
  1242                           	callstack 30
  1243                           
  1244                           ;incstack = 0
  1245                           ;lcdcmd@a stored from wreg
  1246   000BFE  6E01               	movwf	lcdcmd@a^0,c
  1247   000C00                     
  1248                           ;lcd.c: 13:     RC1=0;;lcd.c: 14:     PORTD=a;;lcd.c: 15:     RC2=1;
  1249   000C00  9082               	bcf	3970,0,c	;volatile
  1250                           
  1251                           ;lcd.c: 16:     for(int i=0;i<=100;i++);
  1252   000C02  9282               	bcf	3970,1,c	;volatile
  1253   000C04                     
  1254                           ;lcd.c: 17:     RC2=0;
  1255   000C04  C001  FF83         	movff	lcdcmd@a,3971	;volatile
  1256   000C08                     
  1257                           ;lcd.c: 18:     for(int i=0;i<=1000;i++);
  1258   000C08  8482               	bsf	3970,2,c	;volatile
  1259   000C0A                     
  1260                           ;lcd.c: 19: }
  1261   000C0A  0E00               	movlw	0
  1262   000C0C  6E03               	movwf	(lcdcmd@i+1)^0,c
  1263   000C0E  0E00               	movlw	0
  1264   000C10  6E02               	movwf	lcdcmd@i^0,c
  1265   000C12                     l858:
  1266   000C12  4A02               	infsnz	lcdcmd@i^0,f,c
  1267   000C14  2A03               	incf	(lcdcmd@i+1)^0,f,c
  1268   000C16  BE03               	btfsc	(lcdcmd@i+1)^0,7,c
  1269   000C18  EF17  F006         	goto	u31
  1270   000C1C  5003               	movf	(lcdcmd@i+1)^0,w,c
  1271   000C1E  E109               	bnz	u30
  1272   000C20  0E65               	movlw	101
  1273   000C22  5C02               	subwf	lcdcmd@i^0,w,c
  1274   000C24  A0D8               	btfss	status,0,c
  1275   000C26  EF17  F006         	goto	u31
  1276   000C2A  EF19  F006         	goto	u30
  1277   000C2E                     u31:
  1278   000C2E  EF09  F006         	goto	l858
  1279   000C32                     u30:
  1280   000C32                     
  1281                           ;lcd.c: 20: void display(const char *p)
  1282   000C32  9482               	bcf	3970,2,c	;volatile
  1283   000C34                     
  1284                           ;lcd.c: 21: {
  1285   000C34  0E00               	movlw	0
  1286   000C36  6E05               	movwf	(lcdcmd@i_53+1)^0,c
  1287   000C38  0E00               	movlw	0
  1288   000C3A  6E04               	movwf	lcdcmd@i_53^0,c
  1289   000C3C                     l868:
  1290   000C3C  4A04               	infsnz	lcdcmd@i_53^0,f,c
  1291   000C3E  2A05               	incf	(lcdcmd@i_53+1)^0,f,c
  1292   000C40  BE05               	btfsc	(lcdcmd@i_53+1)^0,7,c
  1293   000C42  EF2C  F006         	goto	u41
  1294   000C46  0E89               	movlw	137
  1295   000C48  5C04               	subwf	lcdcmd@i_53^0,w,c
  1296   000C4A  0E13               	movlw	19
  1297   000C4C  5805               	subwfb	(lcdcmd@i_53+1)^0,w,c
  1298   000C4E  A0D8               	btfss	status,0,c
  1299   000C50  EF2C  F006         	goto	u41
  1300   000C54  EF2E  F006         	goto	u40
  1301   000C58                     u41:
  1302   000C58  EF1E  F006         	goto	l868
  1303   000C5C                     u40:
  1304   000C5C  0012               	return		;funcret
  1305   000C5E                     __end_of_lcdcmd:
  1306                           	callstack 0
  1307                           
  1308 ;; *************** function _keypad *****************
  1309 ;; Defined at:
  1310 ;;		line 43 in file "lcd.c"
  1311 ;; Parameters:    Size  Location     Type
  1312 ;;		None
  1313 ;; Auto vars:     Size  Location     Type
  1314 ;;		None
  1315 ;; Return value:  Size  Location     Type
  1316 ;;                  1    wreg      unsigned char 
  1317 ;; Registers used:
  1318 ;;		wreg, status,2
  1319 ;; Tracked objects:
  1320 ;;		On entry : 0/0
  1321 ;;		On exit  : 0/0
  1322 ;;		Unchanged: 0/0
  1323 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1324 ;;      Params:         0       0       0       0       0       0       0
  1325 ;;      Locals:         0       0       0       0       0       0       0
  1326 ;;      Temps:          0       0       0       0       0       0       0
  1327 ;;      Totals:         0       0       0       0       0       0       0
  1328 ;;Total ram usage:        0 bytes
  1329 ;; Hardware stack levels used: 1
  1330 ;; This function calls:
  1331 ;;		Nothing
  1332 ;; This function is called by:
  1333 ;;		_main
  1334 ;; This function uses a non-reentrant model
  1335 ;;
  1336                           
  1337                           	psect	text4
  1338   000ACC                     __ptext4:
  1339                           	callstack 0
  1340   000ACC                     _keypad:
  1341                           	callstack 30
  1342   000ACC                     l55:
  1343   000ACC                     
  1344                           ;lcd.c: 46:         else if(RB7==0);lcd.c: 47:         {
  1345   000ACC  0E0E               	movlw	14
  1346   000ACE  6E81               	movwf	129,c	;volatile
  1347   000AD0                     
  1348                           ;lcd.c: 48:             return '4';
  1349   000AD0  B881               	btfsc	3969,4,c	;volatile
  1350   000AD2  EF6D  F005         	goto	u61
  1351   000AD6  EF6F  F005         	goto	u60
  1352   000ADA                     u61:
  1353   000ADA  EF72  F005         	goto	l56
  1354   000ADE                     u60:
  1355   000ADE                     
  1356                           ;lcd.c: 49:         };lcd.c: 50:         PORTB=0X0D;
  1357   000ADE  0E31               	movlw	49
  1358   000AE0  EFFE  F005         	goto	l57
  1359   000AE4                     l56:
  1360   000AE4  BA81               	btfsc	3969,5,c	;volatile
  1361   000AE6  EF77  F005         	goto	u71
  1362   000AEA  EF79  F005         	goto	u70
  1363   000AEE                     u71:
  1364   000AEE  EF7C  F005         	goto	l59
  1365   000AF2                     u70:
  1366   000AF2                     
  1367                           ;lcd.c: 53:             return '5';;lcd.c: 54:         }
  1368   000AF2  0E32               	movlw	50
  1369   000AF4  EFFE  F005         	goto	l57
  1370   000AF8                     l59:
  1371   000AF8  BC81               	btfsc	3969,6,c	;volatile
  1372   000AFA  EF81  F005         	goto	u81
  1373   000AFE  EF83  F005         	goto	u80
  1374   000B02                     u81:
  1375   000B02  EF86  F005         	goto	l61
  1376   000B06                     u80:
  1377   000B06                     
  1378                           ;lcd.c: 57:             return '6';;lcd.c: 58:         }
  1379   000B06  0E33               	movlw	51
  1380   000B08  EFFE  F005         	goto	l57
  1381   000B0C                     l61:
  1382   000B0C  BE81               	btfsc	3969,7,c	;volatile
  1383   000B0E  EF8B  F005         	goto	u91
  1384   000B12  EF8D  F005         	goto	u90
  1385   000B16                     u91:
  1386   000B16  EF90  F005         	goto	l60
  1387   000B1A                     u90:
  1388   000B1A                     
  1389                           ;lcd.c: 61:             return '7';;lcd.c: 62:         }
  1390   000B1A  0E34               	movlw	52
  1391   000B1C  EFFE  F005         	goto	l57
  1392   000B20                     l60:
  1393   000B20                     
  1394                           ;lcd.c: 64:         {
  1395   000B20  0E0D               	movlw	13
  1396   000B22  6E81               	movwf	129,c	;volatile
  1397   000B24                     
  1398                           ;lcd.c: 65:             return '8';
  1399   000B24  B881               	btfsc	3969,4,c	;volatile
  1400   000B26  EF97  F005         	goto	u101
  1401   000B2A  EF99  F005         	goto	u100
  1402   000B2E                     u101:
  1403   000B2E  EF9C  F005         	goto	l64
  1404   000B32                     u100:
  1405   000B32                     
  1406                           ;lcd.c: 66:         };lcd.c: 67:         PORTB=0X0B;
  1407   000B32  0E35               	movlw	53
  1408   000B34  EFFE  F005         	goto	l57
  1409   000B38                     l64:
  1410   000B38  BA81               	btfsc	3969,5,c	;volatile
  1411   000B3A  EFA1  F005         	goto	u111
  1412   000B3E  EFA3  F005         	goto	u110
  1413   000B42                     u111:
  1414   000B42  EFA6  F005         	goto	l66
  1415   000B46                     u110:
  1416   000B46                     
  1417                           ;lcd.c: 70:             return '9';;lcd.c: 71:         }
  1418   000B46  0E36               	movlw	54
  1419   000B48  EFFE  F005         	goto	l57
  1420   000B4C                     l66:
  1421   000B4C  BC81               	btfsc	3969,6,c	;volatile
  1422   000B4E  EFAB  F005         	goto	u121
  1423   000B52  EFAD  F005         	goto	u120
  1424   000B56                     u121:
  1425   000B56  EFB0  F005         	goto	l68
  1426   000B5A                     u120:
  1427   000B5A                     
  1428                           ;lcd.c: 74:             return '0';;lcd.c: 75:         }
  1429   000B5A  0E37               	movlw	55
  1430   000B5C  EFFE  F005         	goto	l57
  1431   000B60                     l68:
  1432   000B60  BE81               	btfsc	3969,7,c	;volatile
  1433   000B62  EFB5  F005         	goto	u131
  1434   000B66  EFB7  F005         	goto	u130
  1435   000B6A                     u131:
  1436   000B6A  EFBA  F005         	goto	l67
  1437   000B6E                     u130:
  1438   000B6E                     
  1439                           ;lcd.c: 78: ;lcd.c: 79:         }
  1440   000B6E  0E38               	movlw	56
  1441   000B70  EFFE  F005         	goto	l57
  1442   000B74                     l67:
  1443   000B74                     
  1444                           ;lcd.c: 81:         {
  1445   000B74  0E0B               	movlw	11
  1446   000B76  6E81               	movwf	129,c	;volatile
  1447   000B78                     
  1448                           ;lcd.c: 82: 
  1449   000B78  B881               	btfsc	3969,4,c	;volatile
  1450   000B7A  EFC1  F005         	goto	u141
  1451   000B7E  EFC3  F005         	goto	u140
  1452   000B82                     u141:
  1453   000B82  EFC6  F005         	goto	l71
  1454   000B86                     u140:
  1455   000B86                     
  1456                           ;lcd.c: 83: ;lcd.c: 84:         }
  1457   000B86  0E39               	movlw	57
  1458   000B88  EFFE  F005         	goto	l57
  1459   000B8C                     l71:
  1460   000B8C  BA81               	btfsc	3969,5,c	;volatile
  1461   000B8E  EFCB  F005         	goto	u151
  1462   000B92  EFCD  F005         	goto	u150
  1463   000B96                     u151:
  1464   000B96  EFD0  F005         	goto	l73
  1465   000B9A                     u150:
  1466   000B9A                     
  1467                           ;lcd.c: 87:         {;lcd.c: 88: 
  1468   000B9A  0E30               	movlw	48
  1469   000B9C  EFFE  F005         	goto	l57
  1470   000BA0                     l73:
  1471   000BA0  BC81               	btfsc	3969,6,c	;volatile
  1472   000BA2  EFD5  F005         	goto	u161
  1473   000BA6  EFD7  F005         	goto	u160
  1474   000BAA                     u161:
  1475   000BAA  EFD9  F005         	goto	l75
  1476   000BAE                     u160:
  1477   000BAE  EFD9  F005         	goto	l950
  1478   000BB2                     l75:
  1479   000BB2                     l950:
  1480                           
  1481                           ;lcd.c: 99:         {
  1482   000BB2  0E07               	movlw	7
  1483   000BB4  6E81               	movwf	129,c	;volatile
  1484   000BB6                     
  1485                           ;lcd.c: 100:            return 'r';
  1486   000BB6  B881               	btfsc	3969,4,c	;volatile
  1487   000BB8  EFE0  F005         	goto	u171
  1488   000BBC  EFE2  F005         	goto	u170
  1489   000BC0                     u171:
  1490   000BC0  EFE4  F005         	goto	l78
  1491   000BC4                     u170:
  1492   000BC4  EF66  F005         	goto	l55
  1493   000BC8                     l78:
  1494   000BC8  BA81               	btfsc	3969,5,c	;volatile
  1495   000BCA  EFE9  F005         	goto	u181
  1496   000BCE  EFEB  F005         	goto	u180
  1497   000BD2                     u181:
  1498   000BD2  EFED  F005         	goto	l80
  1499   000BD6                     u180:
  1500   000BD6  EF66  F005         	goto	l55
  1501   000BDA                     l80:
  1502   000BDA  BC81               	btfsc	3969,6,c	;volatile
  1503   000BDC  EFF2  F005         	goto	u191
  1504   000BE0  EFF4  F005         	goto	u190
  1505   000BE4                     u191:
  1506   000BE4  EFF6  F005         	goto	l82
  1507   000BE8                     u190:
  1508   000BE8  EF66  F005         	goto	l55
  1509   000BEC                     l82:
  1510   000BEC  BE81               	btfsc	3969,7,c	;volatile
  1511   000BEE  EFFB  F005         	goto	u201
  1512   000BF2  EFFD  F005         	goto	u200
  1513   000BF6                     u201:
  1514   000BF6  EF66  F005         	goto	l55
  1515   000BFA                     u200:
  1516   000BFA                     
  1517                           ;lcd.c: 113:     lcdcmd(0x01);;lcd.c: 114:     lcdcmd(0x0f);
  1518   000BFA  0E72               	movlw	114
  1519   000BFC                     l57:
  1520   000BFC  0012               	return		;funcret
  1521   000BFE                     __end_of_keypad:
  1522                           	callstack 0
  1523                           
  1524 ;; *************** function _display *****************
  1525 ;; Defined at:
  1526 ;;		line 34 in file "lcd.c"
  1527 ;; Parameters:    Size  Location     Type
  1528 ;;  p               1    5[COMRAM] PTR const unsigned char 
  1529 ;;		 -> STR_9(11), STR_8(13), STR_7(15), STR_6(9), 
  1530 ;;		 -> STR_5(12), STR_4(15), STR_3(11), STR_2(15), 
  1531 ;;		 -> STR_1(11), 
  1532 ;; Auto vars:     Size  Location     Type
  1533 ;;		None
  1534 ;; Return value:  Size  Location     Type
  1535 ;;                  1    wreg      void 
  1536 ;; Registers used:
  1537 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1538 ;; Tracked objects:
  1539 ;;		On entry : 0/0
  1540 ;;		On exit  : 0/0
  1541 ;;		Unchanged: 0/0
  1542 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1543 ;;      Params:         1       0       0       0       0       0       0
  1544 ;;      Locals:         0       0       0       0       0       0       0
  1545 ;;      Temps:          0       0       0       0       0       0       0
  1546 ;;      Totals:         1       0       0       0       0       0       0
  1547 ;;Total ram usage:        1 bytes
  1548 ;; Hardware stack levels used: 1
  1549 ;; Hardware stack levels required when called: 1
  1550 ;; This function calls:
  1551 ;;		_data
  1552 ;; This function is called by:
  1553 ;;		_main
  1554 ;; This function uses a non-reentrant model
  1555 ;;
  1556                           
  1557                           	psect	text5
  1558   000D4A                     __ptext5:
  1559                           	callstack 0
  1560   000D4A                     _display:
  1561                           	callstack 29
  1562   000D4A                     
  1563                           ;lcd.c: 34:         if(RB4==0);lcd.c: 35:         {;lcd.c: 36:             return '1';
  1564   000D4A  EFAE  F006         	goto	l1170
  1565   000D4E                     l1166:
  1566                           
  1567                           ;lcd.c: 37:         };lcd.c: 38:         else if(RB5==0)
  1568   000D4E  C006  FFF6         	movff	display@p,tblptrl
  1569   000D52                     	if	0	;There is only one active tblptr byte
  1570   000D52                     	endif
  1571   000D52                     	if	0	;tblptru may be non-zero
  1572   000D52                     	endif
  1573   000D52                     	if	0	;tblptru may be non-zero
  1574   000D52                     	endif
  1575   000D52  0008               	tblrd		*
  1576   000D54  50F5               	movf	tablat,w,c
  1577   000D56  EC2F  F006         	call	_data
  1578   000D5A                     
  1579                           ;lcd.c: 39:         {
  1580   000D5A  2A06               	incf	display@p^0,f,c
  1581   000D5C                     l1170:
  1582                           
  1583                           ;lcd.c: 36:             return '1';
  1584   000D5C  C006  FFF6         	movff	display@p,tblptrl
  1585   000D60                     	if	0	;There is only one active tblptr byte
  1586   000D60                     	endif
  1587   000D60                     	if	0	;tblptru may be non-zero
  1588   000D60                     	endif
  1589   000D60                     	if	0	;tblptru may be non-zero
  1590   000D60                     	endif
  1591   000D60  0008               	tblrd		*
  1592   000D62  50F5               	movf	tablat,w,c
  1593   000D64  0900               	iorlw	0
  1594   000D66  A4D8               	btfss	status,2,c
  1595   000D68  EFB8  F006         	goto	u461
  1596   000D6C  EFBA  F006         	goto	u460
  1597   000D70                     u461:
  1598   000D70  EFA7  F006         	goto	l1166
  1599   000D74                     u460:
  1600   000D74  0012               	return		;funcret
  1601   000D76                     __end_of_display:
  1602                           	callstack 0
  1603                           
  1604 ;; *************** function _data *****************
  1605 ;; Defined at:
  1606 ;;		line 24 in file "lcd.c"
  1607 ;; Parameters:    Size  Location     Type
  1608 ;;  a               1    wreg     unsigned char 
  1609 ;; Auto vars:     Size  Location     Type
  1610 ;;  a               1    0[COMRAM] unsigned char 
  1611 ;;  i               2    3[COMRAM] int 
  1612 ;;  i               2    1[COMRAM] int 
  1613 ;; Return value:  Size  Location     Type
  1614 ;;                  1    wreg      void 
  1615 ;; Registers used:
  1616 ;;		wreg, status,2, status,0
  1617 ;; Tracked objects:
  1618 ;;		On entry : 0/0
  1619 ;;		On exit  : 0/0
  1620 ;;		Unchanged: 0/0
  1621 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1622 ;;      Params:         0       0       0       0       0       0       0
  1623 ;;      Locals:         5       0       0       0       0       0       0
  1624 ;;      Temps:          0       0       0       0       0       0       0
  1625 ;;      Totals:         5       0       0       0       0       0       0
  1626 ;;Total ram usage:        5 bytes
  1627 ;; Hardware stack levels used: 1
  1628 ;; This function calls:
  1629 ;;		Nothing
  1630 ;; This function is called by:
  1631 ;;		_display
  1632 ;;		_main
  1633 ;; This function uses a non-reentrant model
  1634 ;;
  1635                           
  1636                           	psect	text6
  1637   000C5E                     __ptext6:
  1638                           	callstack 0
  1639   000C5E                     _data:
  1640                           	callstack 29
  1641                           
  1642                           ;incstack = 0
  1643                           ;data@a stored from wreg
  1644   000C5E  6E01               	movwf	data@a^0,c
  1645   000C60                     
  1646                           ;lcd.c: 24:        data(*p);;lcd.c: 25:        p++;;lcd.c: 26:     }
  1647   000C60  8082               	bsf	3970,0,c	;volatile
  1648                           
  1649                           ;lcd.c: 27: }
  1650   000C62  9282               	bcf	3970,1,c	;volatile
  1651   000C64                     
  1652                           ;lcd.c: 28: 
  1653   000C64  C001  FF83         	movff	data@a,3971	;volatile
  1654   000C68                     
  1655                           ;lcd.c: 29: unsigned char keypad()
  1656   000C68  8482               	bsf	3970,2,c	;volatile
  1657   000C6A                     
  1658                           ;lcd.c: 30: {
  1659   000C6A  0E00               	movlw	0
  1660   000C6C  6E03               	movwf	(data@i+1)^0,c
  1661   000C6E  0E00               	movlw	0
  1662   000C70  6E02               	movwf	data@i^0,c
  1663   000C72                     l832:
  1664   000C72  4A02               	infsnz	data@i^0,f,c
  1665   000C74  2A03               	incf	(data@i+1)^0,f,c
  1666   000C76  BE03               	btfsc	(data@i+1)^0,7,c
  1667   000C78  EF47  F006         	goto	u11
  1668   000C7C  5003               	movf	(data@i+1)^0,w,c
  1669   000C7E  E109               	bnz	u10
  1670   000C80  0E65               	movlw	101
  1671   000C82  5C02               	subwf	data@i^0,w,c
  1672   000C84  A0D8               	btfss	status,0,c
  1673   000C86  EF47  F006         	goto	u11
  1674   000C8A  EF49  F006         	goto	u10
  1675   000C8E                     u11:
  1676   000C8E  EF39  F006         	goto	l832
  1677   000C92                     u10:
  1678   000C92                     
  1679                           ;lcd.c: 31:     while(1)
  1680   000C92  9482               	bcf	3970,2,c	;volatile
  1681   000C94                     
  1682                           ;lcd.c: 32:     {
  1683   000C94  0E00               	movlw	0
  1684   000C96  6E05               	movwf	(data@i_57+1)^0,c
  1685   000C98  0E00               	movlw	0
  1686   000C9A  6E04               	movwf	data@i_57^0,c
  1687   000C9C                     l842:
  1688   000C9C  4A04               	infsnz	data@i_57^0,f,c
  1689   000C9E  2A05               	incf	(data@i_57+1)^0,f,c
  1690   000CA0  BE05               	btfsc	(data@i_57+1)^0,7,c
  1691   000CA2  EF5C  F006         	goto	u21
  1692   000CA6  0EE9               	movlw	233
  1693   000CA8  5C04               	subwf	data@i_57^0,w,c
  1694   000CAA  0E03               	movlw	3
  1695   000CAC  5805               	subwfb	(data@i_57+1)^0,w,c
  1696   000CAE  A0D8               	btfss	status,0,c
  1697   000CB0  EF5C  F006         	goto	u21
  1698   000CB4  EF5E  F006         	goto	u20
  1699   000CB8                     u21:
  1700   000CB8  EF4E  F006         	goto	l842
  1701   000CBC                     u20:
  1702   000CBC  0012               	return		;funcret
  1703   000CBE                     __end_of_data:
  1704                           	callstack 0
  1705                           
  1706                           	psect	rparam
  1707   000000                     
  1708                           	psect	config
  1709                           
  1710                           ; Padding undefined space
  1711   300000                     	org	3145728
  1712   300000  FF                 	db	255
  1713                           
  1714                           ;Config register CONFIG1H @ 0x300001
  1715                           ;	Oscillator Selection bits
  1716                           ;	OSC = IRCIO67, Internal oscillator block, port function on RA6 and RA7
  1717                           ;	Fail-Safe Clock Monitor Enable bit
  1718                           ;	FCMEN = 0x0, unprogrammed default
  1719                           ;	Internal/External Oscillator Switchover bit
  1720                           ;	IESO = 0x0, unprogrammed default
  1721   300001                     	org	3145729
  1722   300001  08                 	db	8
  1723                           tosu	equ	0xFFF
  1724                           tosh	equ	0xFFE
  1725                           tosl	equ	0xFFD
  1726                           stkptr	equ	0xFFC
  1727                           pclatu	equ	0xFFB
  1728                           pclath	equ	0xFFA
  1729                           pcl	equ	0xFF9
  1730                           tblptru	equ	0xFF8
  1731                           tblptrh	equ	0xFF7
  1732                           tblptrl	equ	0xFF6
  1733                           tablat	equ	0xFF5
  1734                           prodh	equ	0xFF4
  1735                           prodl	equ	0xFF3
  1736                           indf0	equ	0xFEF
  1737                           postinc0	equ	0xFEE
  1738                           postdec0	equ	0xFED
  1739                           preinc0	equ	0xFEC
  1740                           plusw0	equ	0xFEB
  1741                           fsr0h	equ	0xFEA
  1742                           fsr0l	equ	0xFE9
  1743                           wreg	equ	0xFE8
  1744                           indf1	equ	0xFE7
  1745                           postinc1	equ	0xFE6
  1746                           postdec1	equ	0xFE5
  1747                           preinc1	equ	0xFE4
  1748                           plusw1	equ	0xFE3
  1749                           fsr1h	equ	0xFE2
  1750                           fsr1l	equ	0xFE1
  1751                           bsr	equ	0xFE0
  1752                           indf2	equ	0xFDF
  1753                           postinc2	equ	0xFDE
  1754                           postdec2	equ	0xFDD
  1755                           preinc2	equ	0xFDC
  1756                           plusw2	equ	0xFDB
  1757                           fsr2h	equ	0xFDA
  1758                           fsr2l	equ	0xFD9
  1759                           status	equ	0xFD8

Data Sizes:
    Strings     101
    Constant    0
    Data        20
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     57      77
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    display@p	PTR const unsigned char  size(1) Largest target is 15
		 -> STR_1(CODE[11]), STR_2(CODE[15]), STR_3(CODE[11]), STR_4(CODE[15]), 
		 -> STR_5(CODE[12]), STR_6(CODE[9]), STR_7(CODE[15]), STR_8(CODE[13]), 
		 -> STR_9(CODE[11]), 

    sp__strcpy	PTR unsigned char  size(1) Largest target is 5
		 -> main@pass(COMRAM[5]), 

    strcmp@l	PTR const unsigned char  size(1) Largest target is 5
		 -> main@a(COMRAM[5]), main@pass_temp1(COMRAM[5]), 

    strcmp@r	PTR const unsigned char  size(1) Largest target is 5
		 -> main@pass(COMRAM[5]), main@pass_temp2(COMRAM[5]), 

    strcpy@d	PTR unsigned char  size(1) Largest target is 5
		 -> main@pass(COMRAM[5]), 

    strcpy@dest	PTR unsigned char  size(1) Largest target is 5
		 -> main@pass(COMRAM[5]), 

    strcpy@src	PTR const unsigned char  size(1) Largest target is 5
		 -> main@pass_temp1(COMRAM[5]), 


Critical Paths under _main in COMRAM

    _main->_display
    _display->_data

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                51    51      0    2762
                                              6 COMRAM    51    51      0
                               _data
                            _display
                             _keypad
                             _lcdcmd
                             _strcmp
                             _strcpy
 ---------------------------------------------------------------------------------
 (1) _strcpy                                               3     1      2     225
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (1) _strcmp                                               4     2      2     568
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _lcdcmd                                               5     5      0      75
                                              0 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 (1) _keypad                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _display                                              1     0      1     804
                                              5 COMRAM     1     0      1
                               _data
 ---------------------------------------------------------------------------------
 (2) _data                                                 5     5      0      75
                                              0 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _data
   _display
     _data
   _keypad
   _lcdcmd
   _strcmp
   _strcpy

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      21        0.0%
BITBIGSFRl         281      0       0      19        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     39      4D       1       81.1%
BITBIGSFRhh         3E      0       0      16        0.0%
BITBIGSFRhlh        2B      0       0      17        0.0%
BITBIGSFRhll         E      0       0      18        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      4D      20        0.0%
DATA                 0      0      4D       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Wed Aug 21 09:50:18 2024

                     l43 0C92                       l52 0D74                       l60 0B20  
                     l36 0C32                       l61 0B0C                       l46 0CBC  
                     l71 0B8C                       l55 0ACC                       l39 0C5C  
                     l80 0BDA                       l64 0B38                       l56 0AE4  
                     l73 0BA0                       l57 0BFC                       l82 0BEC  
                     l66 0B4C                       l75 0BB2                       l67 0B74  
                     l59 0AF8                       l68 0B60                       l78 0BC8  
                     u10 0C92                       u11 0C8E                       u20 0CBC  
                     u21 0CB8                       u30 0C32                       u31 0C2E  
                     u40 0C5C                       u41 0C58                       u60 0ADE  
                     u61 0ADA                       u70 0AF2                       u71 0AEE  
                     u80 0B06                       u81 0B02                       u90 0B1A  
                     u91 0B16                      l102 0706                      l820 0C60  
                    l812 0D1A                      l822 0C64                      l910 0B32  
                    l902 0B1A                      l832 0C72                      l824 0C68  
                    l842 0C9C                      l834 0C76                      l826 0C6A  
                    l922 0B5A                      l906 0B20                      l850 0C08  
                    l818 0D9E                      l844 0CA0                      l836 0C94  
                    l932 0B74                      l916 0B46                      l908 0B24  
                    l860 0C16                      l852 0C0A                      l950 0BB2  
                    l942 0B9A                      l934 0B78                      l870 0C40  
                    l862 0C34                      l846 0C00                      l960 0BFA  
                    l952 0BB6                      l936 0B86                      l928 0B6E  
                    l880 0ACC                      l848 0C04                      l890 0AF2  
                    l882 0AD0                      l858 0C12                      l884 0ADE  
                    l868 0C3C                      l896 0B06                      _RC0 7C10  
                    _RC1 7C11                      _RC2 7C12                      _RB4 7C0C  
                    _RB5 7C0D                      _RB6 7C0E                      _RB7 7C0F  
                    u100 0B32                      u101 0B2E                      u110 0B46  
                    u111 0B42                      u200 0BFA                      u120 0B5A  
                    u201 0BF6                      u121 0B56                      u130 0B6E  
                    u131 0B6A                      u140 0B86                      u141 0B82  
                    u150 0B9A                      u151 0B96                      u160 0BAE  
                    u161 0BAA                      u170 0BC4                      u171 0BC0  
                    u180 0BD6                      u181 0BD2                      u501 0698  
                    u190 0BE8                      u191 0BE4                      u511 06AA  
                    u600 07D4                      u601 07D0                      u521 06BC  
                    u610 0826                      u611 0822                      u531 06CE  
                    u460 0D74                      u700 0A98                      u620 0884  
                    u540 0714                      u461 0D70                      u701 0A94  
                    u621 0880                      u541 0710                      u470 0CE4  
                    u710 0AC4                      u630 08DE                      u550 0722  
                    u471 0CE0                      u711 0AC0                      u631 08DA  
                    u551 071E                      u480 0CFA                      u640 08FC  
                    u560 0730                      u481 0CF6                      u641 08F8  
                    u561 072C                      u490 0D9E                      u650 095A  
                    u570 073E                      u491 0D9A                      u651 0956  
                    u571 073A                      u660 09B0                      u580 075C  
                    u661 09AC                      u581 0758                      u670 09D2  
                    u590 07B6                      u671 09CE                      u591 07B2  
                    u680 09F0                      u681 09EC                      u690 0A42  
                    u691 0A3E                      wreg 0FE8                     l1200 06B2  
                   l1210 06EA                     l1202 06C4                     l1300 08A6  
                   l1220 0714                     l1212 06F0                     l1204 06D6  
                   l1310 08DE                     l1302 08AC                     l1230 075C  
                   l1222 0722                     l1206 06DC                     l1312 08FC  
                   l1304 08B2                     l1232 0768                     l1224 0730  
                   l1208 06E2                     l1170 0D5C                     l1330 096A  
                   l1314 0908                     l1306 08BE                     l1250 079A  
                   l1242 077E                     l1234 0770                     l1226 073E  
                   l1218 0700                     l1164 0D4A                     l1180 0CFA  
                   l1172 0CBE                     l1332 0972                     l1324 092C  
                   l1316 0914                     l1308 08C2                     l1252 07B6  
                   l1244 0784                     l1236 0776                     l1340 09B4  
                   l1228 074A                     l1166 0D4E                     l1174 0CC2  
                   l1350 0A04                     l1342 09BA                     l1318 091C  
                   l1270 083E                     l1254 07D4                     l1246 078A  
                   l1190 067C                     l1168 0D5A                     l1176 0CC6  
                   l1184 0D76                     l1360 0A52                     l1344 09D2  
                   l1328 095E                     l1280 0852                     l1272 0844  
                   l1264 07F8                     l1256 07E0                     l1248 0796  
                   l1192 0682                     l1178 0CE4                     l1186 0D7A  
                   l1362 0A5A                     l1346 09F0                     l1370 0A98  
                   l1338 0982                     l1290 0890                     l1282 0858  
                   l1258 07E8                     l1266 082A                     l1194 0688  
                   l1356 0A14                     l1348 09FC                     l1292 0898  
                   l1284 0864                     l1268 0836                     l1196 068E  
                   l1188 0668                     l1358 0A46                     l1294 089E  
                   l1286 0868                     l1278 084C                     l1198 06A0  
                   l1368 0A6A                     l1288 0884                     STR_1 0652  
                   STR_2 0610                     STR_3 0647                     STR_4 061F  
                   STR_5 063B                     STR_6 065D                     STR_7 0601  
                   STR_8 062E                     STR_9 0647                     _data 0C5E  
                   _main 0668                     fsr1h 0FE2                     fsr2h 0FDA  
                   indf1 0FE7                     indf2 0FDF                     fsr1l 0FE1  
                   fsr2l 0FD9                     start 0000             ___param_bank 0000  
                  ?_data 0001                    ?_main 0001                    _PORTB 0F81  
                  _PORTD 0F83                    _TRISA 0F92                    _TRISB 0F93  
                  _TRISC 0F94                    _TRISD 0F95          __end_of_display 0D76  
                  data@a 0001                    data@i 0002                    main@a 0016  
                  main@i 002F                    main@j 0035                    main@s 0039  
                  tablat 0FF5                    plusw1 0FE3                    plusw2 0FDB  
                  status 0FD8          __initialization 0D1C             __end_of_data 0CBE  
           __end_of_main 0ACC                   ??_data 0001                   ??_main 0007  
          __activetblptr 0001                   _ADCON1 0FC1                   _lcdcmd 0BFE  
                 _keypad 0ACC                   isa$std 0001                   _strcmp 0CBE  
                 _strcpy 0D76                ??_display 0007             __pdataCOMRAM 003A  
           __mediumconst 0000                   tblptrh 0FF7                   tblptrl 0FF6  
                 tblptru 0FF8               __accesstop 0060  __end_of__initialization 0D3C  
          ___rparam_used 0001           __pcstackCOMRAM 0001                  ?_lcdcmd 0001  
                ?_keypad 0001                  ?_strcmp 0001                  ?_strcpy 0001  
                __Hparam 0000                  __Lparam 0000           main@pass_temp1 0011  
         main@pass_temp2 0007             __psmallconst 0600                  __pcinit 0D1C  
                __ramtop 0600                  __ptext0 0668                  __ptext1 0D76  
                __ptext2 0CBE                  __ptext3 0BFE                  __ptext4 0ACC  
                __ptext5 0D4A                  __ptext6 0C5E                  _display 0D4A  
                lcdcmd@a 0001                  lcdcmd@i 0002     end_of_initialization 0D3C  
                postdec1 0FE5                  postinc0 0FEE                  postinc1 0FE6  
                postinc2 0FDE               main@F10663 0049               main@F10665 0044  
             main@F10667 003F               main@F10669 003A                  strcmp@l 0001  
                strcmp@r 0002                  strcpy@d 0003               lcdcmd@i_53 0004  
          __pidataCOMRAM 0DA0           __end_of_lcdcmd 0C5E           __end_of_keypad 0BFE  
         __end_of_strcmp 0D1C           __end_of_strcpy 0DA0      start_initialization 0D1C  
               ??_lcdcmd 0001                 ??_keypad 0001                 ??_strcmp 0003  
               ??_strcpy 0003                 ?_display 0006              __smallconst 0600  
              copy_data0 0D30                 __Hrparam 0000                 __Lrparam 0000  
           __Lsmallconst 0600                 data@i_57 0004               strcpy@dest 0001  
               isa$xinst 0000                 main@i_90 001F                 main@i_92 0023  
               main@i_84 001B                 main@i_86 0031                 main@i_94 0027  
               main@i_88 0033                 main@i_96 002B                 display@p 0006  
               main@pass 000C                strcpy@src 0002  
